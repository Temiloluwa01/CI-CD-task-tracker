name: CI/CD Pipeline - Build & Deploy to EC2

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up AWS credentials using access key and secret
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1   # 🔁 Change if you're deploying to a different region

    # Create a new EC2 instance from scratch
    - name: Launch EC2 Instance
      run: |
        INSTANCE_ID=$(aws ec2 run-instances \
          --image-id ami-0c02fb55956c7d316 \
          --instance-type t2.micro \
          --key-name my-key \
          --security-groups default \
          --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=task-tracker-instance}]' \
          --user-data '#!/bin/bash
          sudo yum update -y
          sudo yum install -y docker
          sudo service docker start
          sudo usermod -a -G docker ec2-user' \
         --output text --query 'Instances[0].InstanceId')

        echo "EC2_INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV

        aws ec2 wait instance-running --instance-ids $INSTANCE_ID
        PUBLIC_IP=$(aws ec2 describe-instances \
          --instance-ids $INSTANCE_ID \
          --query 'Reservations[0].Instances[0].PublicIpAddress' \
          --output text)
        echo "EC2_PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV
    

     # Create PEM file from before scp and ssh
    - name: Create PEM file for SSH
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > my-key.pem
        chmod 600 my-key.pem

    # Copy app code to EC2
    - name: Package and transfer app code
      run: |
        tar -czf deploy.tar.gz .  # Zipping the entire project directory
        scp -o StrictHostKeyChecking=no -i my-key.pem deploy.tar.gz ec2-user@${{ env.EC2_PUBLIC_IP }}:/home/ec2-user/

    # SSH into the EC2 and deploy it the app
    - name: SSH and deploy on EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i my-key.pem ec2-user@${{ env.EC2_PUBLIC_IP }} << 'EOF'
          sudo yum update -y
          sudo yum install docker -y
          sudo service docker start
          sudo usermod -aG docker ec2-user
          newgrp docker

          mkdir -p ~/app
          mv deploy.tar.gz ~/app/
          cd ~/app
          tar -xzf deploy.tar.gz

          # Create .env file from scratch
          echo "MONGODB_URL=${{ secrets.MONGODB_URL }}" >> backend/.env
          echo "PORT=${{ secrets.PORT }}" >> backend/.env
          echo "ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}" >> backend/.env

          docker compose -f docker-compose.yaml up -d --build
        EOF
        echo "Deployment complete. Access your app at http://${{ env.EC2_PUBLIC_IP }}:3000"